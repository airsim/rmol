##
# RMOL documentation (HTML, PDF, RTF), to be generated by Doxygen
#

# Define the substitutes for the variables present in the Doxygen
# configuration file. Note that PACKAGE, PACKAGE_NAME and PACKAGE_VERSION
# are defined in the main CMakeLists.txt (of the top root directory).
set (OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
set (top_srcdir       ${CMAKE_SOURCE_DIR})
set (srcdir           ${CMAKE_CURRENT_SOURCE_DIR})

# Convert the Doxygen configuration files (basically, just replace
# the @<variable>@ variables).
set (DOXYGEN_CFG_SRC doxygen_html.cfg.in)
set (DOXYGEN_CFG ${CMAKE_CURRENT_BINARY_DIR}/doxygen_html.cfg)
configure_file (${DOXYGEN_CFG_SRC} ${DOXYGEN_CFG} @ONLY)

## Documentation sources
# Images
set (docimages_DIR ${CMAKE_CURRENT_SOURCE_DIR}/images)
set (image_SOURCES ${PROJECT_NAME}_logo.png sfx_logo.png favicon.ico)
# Tutorial
FILE (GLOB doctutorial_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/tutorial/*.doc)
# Local
FILE (GLOB doclocaldoc_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/local/*.doc)
FILE (GLOB doclocalhtml_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/local/*.html)
set (doclocal_SOURCES ${doclocaldoc_SOURCES} ${doclocalhtml_SOURCES})
# Aggregating all the documentation sources
set (doc_SOURCES ${doctutorial_SOURCES} ${doclocal_SOURCES})

# Add the build rule for Doxygen
set (DOXYGEN_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/html/index.html)
add_custom_command (OUTPUT ${DOXYGEN_OUTPUT}
  COMMAND ${DOXYGEN_EXECUTABLE} ARGS ${DOXYGEN_CFG}
  DEPENDS ${DOXYGEN_CFG} ${doc_SOURCES}
  COMMENT "Generating documentation with Doxygen, from '${DOXYGEN_CFG}'...")
# Add the 'doc' target, depending on the generated HTML documentation
add_custom_target (doc ALL DEPENDS ${DOXYGEN_OUTPUT})

# Copy the needed images into the generated HTML directory
set (htmldoc_DIR ${CMAKE_CURRENT_BINARY_DIR}/html)
set (pdfdoc_DIR ${CMAKE_CURRENT_BINARY_DIR}/latex)
foreach (image_SRC ${image_SOURCES})
  add_custom_command (OUTPUT ${htmldoc_DIR}/${image_SRC}
	COMMAND ${CMAKE_COMMAND} 
	ARGS -E copy ${docimages_DIR}/${image_SRC} ${htmldoc_DIR}/${image_SRC}
	DEPENDS ${DOXYGEN_OUTPUT} ${docimages_DIR}/${image_SRC}
	COMMENT "Copying image '${docimages_DIR}/${image_SRC}' into '${htmldoc_DIR}'...")
  add_custom_target (img_${image_SRC} ALL DEPENDS ${htmldoc_DIR}/${image_SRC})
endforeach (image_SRC)

##
# PDF, generated by Latex
set (REFMAN refman)
set (REFMAN_TEX ${REFMAN}.tex)
set (REFMAN_IDX ${REFMAN}.idx)
set (REFMAN_PDF ${REFMAN}.pdf)
# Note the "|| echo" addition to the pdflatex command, as that latter returns
# as if there were an error.
add_custom_command (
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/latex/${REFMAN_PDF}
  DEPENDS ${DOXYGEN_OUTPUT} ${CMAKE_CURRENT_BINARY_DIR}/latex/${REFMAN_TEX}
  COMMAND ${CMAKE_COMMAND} 
  ARGS -E chdir ${CMAKE_CURRENT_BINARY_DIR}/latex pdflatex -interaction batchmode ${REFMAN_TEX} || echo "First PDF generation done."
  COMMAND ${CMAKE_COMMAND} 
  ARGS -E chdir ${CMAKE_CURRENT_BINARY_DIR}/latex makeindex -q ${REFMAN_IDX}
  COMMAND ${CMAKE_COMMAND} 
  ARGS -E chdir ${CMAKE_CURRENT_BINARY_DIR}/latex pdflatex -interaction batchmode ${REFMAN_TEX} || echo "Second PDF generation done."
  COMMENT "Generating PDF Reference Manual ('${REFMAN_PDF}')...")
# Add the 'pdf' target, depending on the generated PDF manual
add_custom_target (pdf ALL
  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/latex/${REFMAN_PDF})

# Clean-up $build/html and $build/latex on 'make clean'
set_property (DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES 
  ${htmldoc_DIR} ${pdfdoc_DIR})

# Installation of the HTML documentation
set (DOC_PATH share/doc/${PROJECT_NAME}-${CPACK_PACKAGE_VERSION})
install (DIRECTORY ${htmldoc_DIR} DESTINATION ${DOC_PATH})
install (FILES ${CMAKE_CURRENT_BINARY_DIR}/latex/${REFMAN_PDF}
  DESTINATION ${DOC_PATH}/html)
